<?xml version="1.0" encoding="UTF-8"?>
<project name="org.eclipse.jdt.doc.isv" default="build.jars" basedir=".">

	<path id="path_bootclasspath">
		<fileset dir="${java.home}/lib">
			<include name="*.jar" />
		</fileset>
	</path>
	<property name="bootclasspath" refid="path_bootclasspath" />

	<target name="init">
		<property name="plugin" value="org.eclipse.jdt.doc.isv" />
		<property name="version.suffix" value="3.3.0" />
		<property name="full.name" value="${plugin}_${version.suffix}" />
		<property name="temp.folder" value="${basedir}/temp.folder" />
		<property name="plugin.destination" value="${basedir}" />
		<property name="build.result.folder" value="${basedir}" />
		<condition property="p2.publish.parts" value="true">
			<istrue value="${p2.gathering}" />
		</condition>
	</target>

	<target name="build.update.jar" depends="init">
		<delete dir="${temp.folder}" />
		<mkdir dir="${temp.folder}" />
		<antcall target="build.jars" />
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/" />
		</antcall>
		<zip zipfile="${plugin.destination}/${full.name}.jar" basedir="${temp.folder}/${full.name}" filesonly="false" />
		<delete dir="${temp.folder}" />
	</target>

	<target name="publish.bin.parts" depends="init" if="p2.publish.parts">
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${build.result.folder}" />
		</antcall>
		<eclipse.gatherBundle metadataRepository="${p2.build.repo}" artifactRepository="${p2.build.repo}" buildResultFolder="${build.result.folder}" targetFolder="${build.result.folder}/${full.name}" />
	</target>

	<target name="gather.bin.parts" depends="init" if="destination.temp.folder">
		<property name="basedir.properties" value="pde_basedirs.properties" />

		<ant antfile="buildDoc.xml" />
		<mkdir dir="${destination.temp.folder}/${full.name}" />
		<copy todir="${destination.temp.folder}/${full.name}">
			<fileset dir="${basedir}" includes="concepts/, gettingStarted/, images/, reference/, tasks/,samples/,guide/,porting/,questions/,*.properties,*.xml,*.zip,*.html,*.htm,*.png,*.css,META-INF/,index/" excludes="build.properties,build.xml,buildDoc.xml" />
		</copy>
		<eclipse.versionReplacer path="${destination.temp.folder}/${full.name}" version="${version.suffix}" />
	</target>

	<target name="build.jars" depends="init">
	</target>

	<target name="gather.sources" depends="init" if="destination.temp.folder">
	</target>

	<target name="build.sources" depends="init">
	</target>

	<target name="gather.logs" depends="init" if="destination.temp.folder">
	</target>

	<target name="clean" depends="init">
		<delete file="${plugin.destination}/${full.name}.jar" />
		<delete file="${plugin.destination}/${full.name}.zip" />
		<delete dir="${temp.folder}" />
	</target>

	<target name="refresh" depends="init" if="eclipse.running">
		<eclipse.refreshLocal resource="${plugin}" depth="infinite" />
	</target>

	<target name="zip.plugin" depends="init">
		<delete dir="${temp.folder}" />
		<mkdir dir="${temp.folder}" />
		<antcall target="build.jars" />
		<antcall target="build.sources" />
		<antcall target="gather.bin.parts">
			<param name="destination.temp.folder" value="${temp.folder}/" />
		</antcall>
		<antcall target="gather.sources">
			<param name="destination.temp.folder" value="${temp.folder}/" />
		</antcall>
		<delete>
			<fileset dir="${temp.folder}" includes="**/*.bin.log" />
		</delete>
		<zip zipfile="${plugin.destination}/${full.name}.zip" basedir="${temp.folder}" filesonly="true" />
		<delete dir="${temp.folder}" />
	</target>

</project>
